---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import BlogCard from '../components/BlogCard.astro';
import { getCollection } from 'astro:content';
import { BLOG_TITLE, BLOG_DESCRIPTION, NO_POSTS_MESSAGE } from '../consts';

// Helper function to get a valid timestamp or fallback
function getValidTimestamp(date: Date | null | undefined): number {
    if (!date) return 0;
    const timestamp = date.getTime();
    return isNaN(timestamp) ? 0 : timestamp;
}

const posts = (await getCollection('blog'))
    .filter(post => post.data.publish)
    .sort((a, b) => {
        const dateA = getValidTimestamp(a.data.created_date);
        const dateB = getValidTimestamp(b.data.created_date);
        return dateB - dateA;
    });
---

<!doctype html>
<html lang="en">
    <head>
        <BaseHead title={BLOG_TITLE} description={BLOG_DESCRIPTION} />
    </head>
    <body>
        <Header />
        <main class="container-wide page-container">
            <div class="page-header">
                <h1 class="page-title">{BLOG_TITLE}</h1>
                <p class="page-description">{BLOG_DESCRIPTION}</p>
            </div>
            {posts.length > 0 ? (
                <div class="posts-grid">
                    {posts.map((post) => (
                        <BlogCard
                            title={post.data.title}
                            description={post.data.description ?? undefined}
                            date={post.data.created_date ?? undefined}
                            slug={post.data.slug ?? post.id}
                            featured_image={post.data.featured_image ?? undefined}
                        />
                    ))}
                </div>
            ) : (
                <div class="no-posts">
                    {NO_POSTS_MESSAGE}
                </div>
            )}
        </main>
        <Footer />
    </body>
</html>

